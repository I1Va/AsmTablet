Turbo Assembler	 Version 4.1	    02/10/25 19:46:38	    Page 1
tablet.asm



      1	0000			     .model tiny
      2				     .186
      3				     locals @@
      4	0000			     .code
      5				     org 100h
      6	      =B800		     VIDEOSEG equ 0b800h
      7
      8	0100			     start:
      9
     10					     ;call print_msg
     11					     ;call show_tablet
     12	0100  B8 0005			     mov ax, 5
     13	0103  BB 0005			     mov bx, 5
     14	0106  B9 0028			     mov cx, 40
     15	0109  BA 0014			     mov dx, 20
     16	010C  E8 007A			     call draw_rect
     17	010F  B8 4C00			     mov ax, 4c00h
     18	0112  CD 21			     int 21h
     19
     20
     21
     22				     ;##########################################
     23				     ;		     print_msg
     24				     ;------------------------------------------
     25	0114  42 72 65 61 6B 50	6F+  msg_string	db 'BreakPoint$'
     26	      69 6E 74 24
     27				     ;------------------------------------------
     28				     ; Print string,
     29				     ;	 placed	in msg_string asm variable
     30				     ; Entry: None
     31				     ; Exit: None
     32				     ; Destr: AX, DX
     33				     ;------------------------------------------
     34	011F			     print_msg	     proc
     35	011F  B4 09				     mov ah, 09h
     36	0121  BA 0114r				     mov dx, offset msg_string
     37	0124  CD 21				     int 21h
     38	0126  C3				     ret
     39	0127					     endp
     40				     ;------------------------------------------
     41				     ;##########################################
     42
     43
     44				     ;##########################################
     45				     ;		     show_tablet
     46				     ;------------------------------------------
     47
     48				     ;------------------------------------------
     49				     ; Show tablet
     50				     ; Entry: None
     51				     ; Exit: None
     52				     ; Destr: AX, BX, ES,
     53				     ;------------------------------------------
     54	0127			     show_tablet     proc
     55	0127  B8 B800				     mov ax, VIDEOSEG
     56	012A  8E C0				     mov es, ax
     57	012C  BB 0370				     mov bx, 5*80*2 + 40*2
Turbo Assembler	 Version 4.1	    02/10/25 19:46:38	    Page 2
tablet.asm



     58	012F  26: C6 07	41			     mov byte ptr es:[bx], 'A'
     59	0133  26: C6 47	01 EE			     mov byte ptr es:[bx+1], 11101110b
     60
     61	0138  C3				     ret
     62	0139					     endp
     63				     ;------------------------------------------
     64				     ;##########################################
     65
     66
     67				     ;##########################################
     68				     ;		     draw_line
     69				     ;------------------------------------------
     70
     71				     ;------------------------------------------
     72				     ; draws a line at coords (AX, BX)
     73				     ; with length = CX
     74				     ; Entry: AX, BX, CX
     75				     ; Exit: None
     76				     ; Destr: AX, BX, CX, DX, ES
     77				     ; WARNING:	inf loop expected if length < 0
     78				     ;------------------------------------------
     79	0139			     draw_line	     proc
     80	0139  BA B800				     mov dx, VIDEOSEG
     81	013C  8E C2				     mov es, dx
     82
     83	013E  69 C0 00A0			     imul ax, 160
     84	0142  6B DB 02				     imul bx, 2
     85	0145  03 D8				     add bx, ax
     86
     87	0147			     @@while:						; while	(CX != 0):
     88	0147  83 C3 02				     add bx, 2
     89	014A  26: C6 07	41			     mov byte ptr es:[bx], 'A'
     90	014E  26: C6 47	01 EE			     mov byte ptr es:[bx+1], 11101110b
     91	0153  E2 F2				     LOOP @@while
     92
     93
     94	0155  C3				     ret
     95	0156					     endp
     96				     ;------------------------------------------
     97				     ;##########################################
     98
     99
    100				     ;##########################################
    101				     ;		     draw_pat_line
    102				     ;------------------------------------------
    103				     ;------------------------------------------
    104				     ; draws a line of 3 parts at coords (AX, BX)
    105				     ; line length = CX
    106				     ; line pattern adress = DX
    107				     ; 1st part	consists of 1st	sim of line_pattern, len = 1
    108				     ; 2nd - 2nd sim, len = CX - 2
    109				     ; 3rd - 3rd sim, len = 1
    110				     ; Entry: AX, BX, CX, DX
    111				     ; Exit: None
    112				     ; Destr: AX, BX, CX, DX, ES
    113				     ; WARNING:	inf loop expected if length < 0
    114				     ; WARNING:	len of string: max(CX, 3)
Turbo Assembler	 Version 4.1	    02/10/25 19:46:38	    Page 3
tablet.asm



    115				     ;------------------------------------------
    116	0156			     draw_pat_line   proc
    117	0156  69 C0 00A0			     imul ax, 160
    118	015A  6B DB 02				     imul bx, 2
    119	015D  03 D8				     add bx, ax
    120
    121	015F  B8 B800				     mov ax, VIDEOSEG
    122	0162  8E C0				     mov es, ax
    123
    124	0164  56				     push si
    125	0165  8B F2				     mov si, dx
    126
    127	0167  8A 04				     mov al, byte ptr [si]
    128	0169  46				     inc si
    129	016A  26: 88 07				     mov byte ptr es:[bx], al
    130	016D  83 C3 02				     add bx, 2
    131	0170  83 E9 02				     sub cx, 2
    132	0173			     @@while:						; while	(CX != 0):
    133
    134
    135	0173  8A 04				     mov al, byte ptr [si]
    136	0175  26: 88 07				     mov byte ptr es:[bx], al
    137						     ;mov byte ptr es:[bx+1], 11101110b
    138	0178  83 C3 02				     add bx, 2
    139	017B  E2 F6				     LOOP @@while
    140
    141	017D  46				     inc si
    142	017E  8A 04				     mov al, byte ptr [si]
    143	0180  26: 88 07				     mov byte ptr es:[bx], al
    144
    145	0183  5E				     pop si
    146	0184  C3				     ret
    147	0185					     endp
    148				     ;------------------------------------------
    149				     ;##########################################
    150
    151
    152
    153
    154
    155
    156
    157				     ;##########################################
    158				     ;		     draw_rect
    159				     ;------------------------------------------
    160	0185  2B 2D 2B 24	     line_pattern db '+-+$'
    161				     ;------------------------------------------
    162				     ; draws a rectangle at coords (AX,	BX)
    163				     ;	 with width = CX, height = DX
    164				     ; Entry: AX, BX, CX, DX
    165				     ; Exit: None
    166				     ; Destr: AX, BX, CX, DX, ES
    167				     ; WARNING:	inf loop expected
    168				     ;	 if height/width < 0
    169				     ;------------------------------------------
    170	0189			     draw_rect	     proc
    171
Turbo Assembler	 Version 4.1	    02/10/25 19:46:38	    Page 4
tablet.asm



    172
    173	0189			     @@while:						; while	(CX != 0):
    174	0189  50				     push ax
    175	018A  53				     push bx
    176	018B  51				     push cx
    177	018C  52				     push dx
    178	018D  06				     push es
    179	018E  BA 0185r				     mov dx, offset line_pattern
    180	0191  E8 FFC2				     call draw_pat_line
    181	0194  07				     pop es
    182	0195  5A				     pop dx
    183	0196  59				     pop cx
    184	0197  5B				     pop bx
    185	0198  58				     pop ax
    186
    187
    188	0199  40				     inc ax
    189	019A  83 EA 01				     sub dx, 1
    190	019D  83 FA 00				     cmp dx, 0
    191	01A0  7F E7				     jg	@@while
    192
    193
    194	01A2  C3				     ret
    195	01A3					     endp
    196				     ;------------------------------------------
    197				     ;##########################################
    198
    199
    200				     end start
Turbo Assembler	 Version 4.1	    02/10/25 19:46:38	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/10/25"
??FILENAME			  Text	 "tablet  "
??TIME				  Text	 "19:46:38"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@WHILE				  Near	 DGROUP:0147
@@WHILE				  Near	 DGROUP:0173
@@WHILE				  Near	 DGROUP:0189
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 TABLET
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
DRAW_LINE			  Near	 DGROUP:0139
DRAW_PAT_LINE			  Near	 DGROUP:0156
DRAW_RECT			  Near	 DGROUP:0189
LINE_PATTERN			  Byte	 DGROUP:0185
MSG_STRING			  Byte	 DGROUP:0114
PRINT_MSG			  Near	 DGROUP:011F
SHOW_TABLET			  Near	 DGROUP:0127
START				  Near	 DGROUP:0100
VIDEOSEG			  Number B800

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01A3 Word	  Public  CODE
