Turbo Assembler	 Version 4.1	    02/10/25 20:07:52	    Page 1
tablet.asm



      1	0000			     .model tiny
      2				     .186
      3				     locals @@
      4	0000			     .code
      5				     org 100h
      6	      =B800		     VIDEOSEG equ 0b800h
      7
      8	0100			     start:
      9
     10					     ;call print_msg
     11					     ;call show_tablet
     12	0100  B8 0005			     mov ax, 5	       ; X cord
     13	0103  BB 001E			     mov bx, 30	       ; Y cord
     14	0106  B9 0028			     mov cx, 40	       ; width
     15	0109  BA 000A			     mov dx, 10	       ; height
     16	010C  E8 008A			     call draw_rect
     17	010F  B8 4C00			     mov ax, 4c00h
     18	0112  CD 21			     int 21h
     19
     20
     21
     22				     ;##########################################
     23				     ;		     print_msg
     24				     ;------------------------------------------
     25	0114  42 72 65 61 6B 50	6F+  msg_string	db 'BreakPoint$'
     26	      69 6E 74 24
     27				     ;------------------------------------------
     28				     ; Print string,
     29				     ;	 placed	in msg_string asm variable
     30				     ; Entry: None
     31				     ; Exit: None
     32				     ; Destr: AX, DX
     33				     ;------------------------------------------
     34	011F			     print_msg	     proc
     35	011F  B4 09				     mov ah, 09h
     36	0121  BA 0114r				     mov dx, offset msg_string
     37	0124  CD 21				     int 21h
     38	0126  C3				     ret
     39	0127					     endp
     40				     ;------------------------------------------
     41				     ;##########################################
     42
     43
     44				     ;##########################################
     45				     ;		     show_tablet
     46				     ;------------------------------------------
     47
     48				     ;------------------------------------------
     49				     ; Show tablet
     50				     ; Entry: None
     51				     ; Exit: None
     52				     ; Destr: AX, BX, ES,
     53				     ;------------------------------------------
     54	0127			     show_tablet     proc
     55	0127  B8 B800				     mov ax, VIDEOSEG
     56	012A  8E C0				     mov es, ax
     57	012C  BB 0370				     mov bx, 5*80*2 + 40*2
Turbo Assembler	 Version 4.1	    02/10/25 20:07:52	    Page 2
tablet.asm



     58	012F  26: C6 07	41			     mov byte ptr es:[bx], 'A'
     59	0133  26: C6 47	01 EE			     mov byte ptr es:[bx+1], 11101110b
     60
     61	0138  C3				     ret
     62	0139					     endp
     63				     ;------------------------------------------
     64				     ;##########################################
     65
     66
     67				     ;##########################################
     68				     ;		     draw_line
     69				     ;------------------------------------------
     70
     71				     ;------------------------------------------
     72				     ; draws a line at coords (AX, BX)
     73				     ; with length = CX
     74				     ; Entry: AX, BX, CX
     75				     ; Exit: None
     76				     ; Destr: AX, BX, CX, DX, ES
     77				     ; WARNING:	inf loop expected if length < 0
     78				     ;------------------------------------------
     79	0139			     draw_line	     proc
     80	0139  BA B800				     mov dx, VIDEOSEG
     81	013C  8E C2				     mov es, dx
     82
     83	013E  69 C0 00A0			     imul ax, 160
     84	0142  6B DB 02				     imul bx, 2
     85	0145  03 D8				     add bx, ax
     86
     87	0147			     @@while:						; while	(CX != 0):
     88	0147  83 C3 02				     add bx, 2
     89	014A  26: C6 07	41			     mov byte ptr es:[bx], 'A'
     90	014E  26: C6 47	01 EE			     mov byte ptr es:[bx+1], 11101110b
     91	0153  E2 F2				     LOOP @@while
     92
     93
     94	0155  C3				     ret
     95	0156					     endp
     96				     ;------------------------------------------
     97				     ;##########################################
     98
     99
    100				     ;##########################################
    101				     ;		     draw_pat_line
    102				     ;------------------------------------------
    103				     ;------------------------------------------
    104				     ; draws a line of 3 parts at coords (AX, BX)
    105				     ; line length = CX
    106				     ; line pattern adress = DX
    107				     ; 1st part	consists of 1st	sim of line_pattern, len = 1
    108				     ; 2nd - 2nd sim, len = CX - 2
    109				     ; 3rd - 3rd sim, len = 1
    110				     ; Entry: AX, BX, CX, DX
    111				     ; Exit: None
    112				     ; Destr: None
    113				     ; WARNING:	inf loop expected if length < 0
    114				     ; WARNING:	len of string: max(CX, 3)
Turbo Assembler	 Version 4.1	    02/10/25 20:07:52	    Page 3
tablet.asm



    115				     ;------------------------------------------
    116	0156			     draw_pat_line   proc
    117	0156  50				     push ax ; |
    118	0157  53				     push bx ; |
    119	0158  51				     push cx ; | reg save
    120	0159  52				     push dx ; |
    121	015A  06				     push es ; |
    122
    123	015B  69 C0 00A0			     imul ax, 160
    124	015F  6B DB 02				     imul bx, 2
    125	0162  03 D8				     add bx, ax
    126
    127	0164  B8 B800				     mov ax, VIDEOSEG
    128	0167  8E C0				     mov es, ax
    129
    130	0169  56				     push si
    131	016A  8B F2				     mov si, dx
    132
    133	016C  8A 04				     mov al, byte ptr [si]
    134	016E  46				     inc si
    135	016F  26: 88 07				     mov byte ptr es:[bx], al
    136	0172  83 C3 02				     add bx, 2
    137	0175  83 E9 02				     sub cx, 2
    138	0178			     @@while:						; while	(CX != 0):
    139
    140
    141	0178  8A 04				     mov al, byte ptr [si]
    142	017A  26: 88 07				     mov byte ptr es:[bx], al
    143						     ;mov byte ptr es:[bx+1], 11101110b
    144	017D  83 C3 02				     add bx, 2
    145	0180  E2 F6				     LOOP @@while
    146
    147	0182  46				     inc si
    148	0183  8A 04				     mov al, byte ptr [si]
    149	0185  26: 88 07				     mov byte ptr es:[bx], al
    150
    151	0188  5E				     pop si
    152
    153
    154	0189  07				     pop es ; |
    155	018A  5A				     pop dx ; |
    156	018B  59				     pop cx ; |	reg restore
    157	018C  5B				     pop bx ; |
    158	018D  58				     pop ax ; |
    159
    160	018E  C3				     ret
    161	018F					     endp
    162				     ;------------------------------------------
    163				     ;##########################################
    164
    165
    166
    167
    168
    169
    170
    171				     ;##########################################
Turbo Assembler	 Version 4.1	    02/10/25 20:07:52	    Page 4
tablet.asm



    172				     ;		     draw_rect
    173				     ;------------------------------------------
    174	018F  2B 3D 2B 7C 2E 7C	2B+  line_pattern db '+=+|.|+=+$'
    175	      3D 2B 24
    176				     ;------------------------------------------
    177				     ; draws a rectangle at coords (AX,	BX)
    178				     ;	 with width = CX, height = DX
    179				     ; Entry: AX, BX, CX, DX
    180				     ; Exit: None
    181				     ; Destr: AX, BX, CX, DX, ES
    182				     ; WARNING:	inf loop expected
    183				     ;	 if height/width < 0
    184				     ;------------------------------------------
    185	0199			     draw_rect	     proc
    186
    187
    188
    189
    190
    191
    192
    193	0199  52				     push dx
    194	019A  BA 018Fr				     mov dx, offset line_pattern
    195	019D  E8 FFB6				     call draw_pat_line
    196	01A0  5A				     pop dx
    197	01A1  40				     inc ax
    198	01A2  83 EA 02				     sub dx, 2
    199
    200	01A5			     @@while:						; while	(CX != 0):
    201
    202	01A5  52				     push dx
    203	01A6  BA 018Fr				     mov dx, offset line_pattern
    204	01A9  83 C2 03				     add dx, 3
    205	01AC  E8 FFA7				     call draw_pat_line
    206	01AF  5A				     pop dx
    207	01B0  40				     inc ax
    208	01B1  83 EA 01				     sub dx, 1
    209	01B4  83 FA 00				     cmp dx, 0
    210	01B7  7F EC				     jg	@@while
    211
    212	01B9  52				     push dx
    213	01BA  BA 018Fr				     mov dx, offset line_pattern
    214	01BD  83 C2 06				     add dx, 6
    215	01C0  E8 FF93				     call draw_pat_line
    216	01C3  5A				     pop dx
    217	01C4  40				     inc ax
    218	01C5  83 EA 02				     sub dx, 2
    219
    220	01C8  C3				     ret
    221	01C9					     endp
    222				     ;------------------------------------------
    223				     ;##########################################
    224
    225				     end start
Turbo Assembler	 Version 4.1	    02/10/25 20:07:52	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/10/25"
??FILENAME			  Text	 "tablet  "
??TIME				  Text	 "20:07:52"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@WHILE				  Near	 DGROUP:0147
@@WHILE				  Near	 DGROUP:0178
@@WHILE				  Near	 DGROUP:01A5
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 TABLET
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
DRAW_LINE			  Near	 DGROUP:0139
DRAW_PAT_LINE			  Near	 DGROUP:0156
DRAW_RECT			  Near	 DGROUP:0199
LINE_PATTERN			  Byte	 DGROUP:018F
MSG_STRING			  Byte	 DGROUP:0114
PRINT_MSG			  Near	 DGROUP:011F
SHOW_TABLET			  Near	 DGROUP:0127
START				  Near	 DGROUP:0100
VIDEOSEG			  Number B800

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01C9 Word	  Public  CODE
